{"ast":null,"code":"/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create sider view]\n*/\nimport { combineReducers } from \"redux\";\nconst ADD_MENU_ITEMS = \"ADD_MENU_ITEMS\";\nconst INCREASE_COUNTER = \"INCR_COUNTER\";\nconst DECREASE_COUNTER = \"DEC_COUNTER\";\nconst initState = {\n  todoMenu: [],\n  counterList: []\n};\n\nconst addMenuItemReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_MENU_ITEMS:\n      const tempTodo = state.todoMenu.map(list => list);\n      tempTodo.push(action.payload);\n      return {\n        todoMenu: tempTodo\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst counterReducer = (state = initState, action) => {\n  switch (action.type) {\n    case INCREASE_COUNTER:\n      //copy array\n      const tempCount = state.counterList.map(list => list); //get current index\n\n      const i = tempCount.findIndex(el => el.id === action.payload.id); //update array[i] if exist else add\n\n      if (i > -1) {\n        const j = tempCount[i].data + action.payload.data;\n        tempCount[i] = { ...tempCount[i],\n          data: j\n        };\n      } else {\n        tempCount.push(action.payload);\n      }\n\n      return {\n        counterList: tempCount\n      };\n      ;\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({\n  addMenuItemReducer,\n  counterReducer\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/redux/reducer/index.js"],"names":["combineReducers","ADD_MENU_ITEMS","INCREASE_COUNTER","DECREASE_COUNTER","initState","todoMenu","counterList","addMenuItemReducer","state","action","type","tempTodo","map","list","push","payload","counterReducer","tempCount","i","findIndex","el","id","j","data","reducer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,QAAgC,OAAhC;AAEA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,gBAAgB,GAAG,cAAzB;AACA,MAAMC,gBAAgB,GAAG,aAAzB;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAlB;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAL;AACI,YAAMU,QAAQ,GAAGH,KAAK,CAACH,QAAN,CAAeO,GAAf,CAAmBC,IAAI,IAAIA,IAA3B,CAAjB;AACAF,MAAAA,QAAQ,CAACG,IAAT,CAAcL,MAAM,CAACM,OAArB;AACA,aAAO;AACHV,QAAAA,QAAQ,EAAEM;AADP,OAAP;;AAGJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;AAaA,MAAMQ,cAAc,GAAG,CAACR,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,gBAAL;AACI;AACA,YAAMe,SAAS,GAAGT,KAAK,CAACF,WAAN,CAAkBM,GAAlB,CAAsBC,IAAI,IAAIA,IAA9B,CAAlB,CAFJ,CAGI;;AACA,YAAMK,CAAC,GAAGD,SAAS,CAACE,SAAV,CAAoBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUZ,MAAM,CAACM,OAAP,CAAeM,EAAnD,CAAV,CAJJ,CAKI;;AACA,UAAIH,CAAC,GAAG,CAAC,CAAT,EAAY;AACR,cAAMI,CAAC,GAAGL,SAAS,CAACC,CAAD,CAAT,CAAaK,IAAb,GAAoBd,MAAM,CAACM,OAAP,CAAeQ,IAA7C;AACAN,QAAAA,SAAS,CAACC,CAAD,CAAT,GAAe,EAAC,GAAGD,SAAS,CAACC,CAAD,CAAb;AAAkBK,UAAAA,IAAI,EAAGD;AAAzB,SAAf;AACH,OAHD,MAGK;AACDL,QAAAA,SAAS,CAACH,IAAV,CAAeL,MAAM,CAACM,OAAtB;AACH;;AACD,aAAO;AACHT,QAAAA,WAAW,EAAEW;AADV,OAAP;AAEE;;AACN;AACI,aAAOT,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,MAAMgB,OAAO,GAAGxB,eAAe,CAAC;AAC5BO,EAAAA,kBAD4B;AAE5BS,EAAAA;AAF4B,CAAD,CAA/B;AAKA,eAAeQ,OAAf","sourcesContent":["/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create sider view]\n*/\n\nimport { combineReducers } from \"redux\";\n\nconst ADD_MENU_ITEMS = \"ADD_MENU_ITEMS\";\nconst INCREASE_COUNTER = \"INCR_COUNTER\";\nconst DECREASE_COUNTER = \"DEC_COUNTER\";\n\n\nconst initState = {\n    todoMenu: [],\n    counterList: []\n}\n\n\nconst addMenuItemReducer = (state = initState, action) => {\n    switch (action.type){\n        case ADD_MENU_ITEMS:\n            const tempTodo = state.todoMenu.map(list => list);\n            tempTodo.push(action.payload);\n            return {\n                todoMenu: tempTodo,\n            };\n        default:\n            return state;\n    }\n}\n\nconst counterReducer = (state = initState, action) => {\n    switch (action.type){\n        case INCREASE_COUNTER:\n            //copy array\n            const tempCount = state.counterList.map(list => list);\n            //get current index\n            const i = tempCount.findIndex(el => el.id === action.payload.id);\n            //update array[i] if exist else add\n            if (i > -1) {\n                const j = tempCount[i].data + action.payload.data\n                tempCount[i] = {...tempCount[i], data : j} \n            }else{\n                tempCount.push(action.payload);\n            } \n            return {\n                counterList: tempCount,\n            };;\n        default:\n            return state;\n    }\n}\n\nconst reducer = combineReducers({\n    addMenuItemReducer,\n    counterReducer\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}