{"ast":null,"code":"/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\nimport { actionTypes } from \"../action/index\";\nconst initState = {\n  todoMenu: [],\n  counterList: []\n};\n\nconst reducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_MENU_ITEMS:\n      const tempTodo = state.todoMenu.map(list => list);\n      tempTodo.push(action.payload);\n      const tempCount = state.counterList.map(list => list);\n      tempCount.push({\n        data: 0\n      });\n      return {\n        todoMenu: tempTodo,\n        counterList: tempCount\n      };\n\n    case actionTypes.INCREASE_COUNTER:\n      const tempIncTodo = state.todoMenu.map(list => list);\n      const tempIncCount = state.counterList.map(list => list); //get current index\n\n      const i = tempIncCount.findIndex(el => el === action.payload); //update array if exist else add\n\n      if (i > -1) {\n        const j = tempIncCount[i].data + action.payload.data;\n        tempIncCount[i] = { ...tempIncCount[i],\n          data: j\n        };\n      } else {\n        tempIncCount.push(action.payload);\n      }\n\n      return {\n        todoMenu: tempIncTodo,\n        counterList: tempIncCount\n      };\n\n    case actionTypes.DECREASE_COUNTER:\n      const tempDecTodo = state.todoMenu.map(list => list);\n      const tempDecCount = state.counterList.map(list => list); //get current index\n\n      const x = tempDecCount.findIndex(el => el.id === action.payload.id); //update array if exist else add\n\n      if (x > -1) {\n        const y = tempDecCount[x].data - action.payload.data;\n        tempDecCount[x] = { ...tempDecCount[x],\n          data: y < 0 ? 0 : y\n        };\n      } else {\n        tempDecCount.push(action.payload);\n      }\n\n      return {\n        todoMenu: tempDecCount,\n        counterList: tempDecCount\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/redux/reducer/index.js"],"names":["actionTypes","initState","todoMenu","counterList","reducer","state","action","type","ADD_MENU_ITEMS","tempTodo","map","list","push","payload","tempCount","data","INCREASE_COUNTER","tempIncTodo","tempIncCount","i","findIndex","el","j","DECREASE_COUNTER","tempDecTodo","tempDecCount","x","id","y"],"mappings":"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","sourcesContent":["/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\n\nimport { actionTypes } from \"../action/index\"\n\n\nconst initState = {\n    todoMenu: [],\n    counterList: []\n}\n\n\nconst reducer = (state = initState, action) => {\n\n    switch (action.type){\n        case actionTypes.ADD_MENU_ITEMS:\n            const tempTodo = state.todoMenu.map(list => list);\n            tempTodo.push(action.payload);\n            const tempCount = state.counterList.map(list => list);\n            tempCount.push({data: 0});\n            return {\n                todoMenu: tempTodo,\n                counterList: tempCount\n            };\n        case actionTypes.INCREASE_COUNTER:\n            const tempIncTodo = state.todoMenu.map(list => list);\n\n            const tempIncCount = state.counterList.map(list => list);\n            //get current index\n            const i = tempIncCount.findIndex(el => el === action.payload);\n            //update array if exist else add\n            if (i > -1) {\n                const j = tempIncCount[i].data + action.payload.data\n                tempIncCount[i] = {...tempIncCount[i], data : j} \n            }else{\n                tempIncCount.push(action.payload);\n            } \n            return {\n                todoMenu: tempIncTodo,\n                counterList: tempIncCount,\n            };\n        case actionTypes.DECREASE_COUNTER:\n            const tempDecTodo = state.todoMenu.map(list => list);\n\n                const tempDecCount = state.counterList.map(list => list);\n                //get current index\n                const x = tempDecCount.findIndex(el => el.id === action.payload.id);\n                //update array if exist else add\n                if (x > -1) {\n                    const y = tempDecCount[x].data - action.payload.data\n                    tempDecCount[x] = {...tempDecCount[x], data : y < 0? 0: y} \n                }else{\n                    tempDecCount.push(action.payload);\n                } \n                return {\n                    todoMenu: tempDecCount,\n                    counterList: tempDecCount,\n                };\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}