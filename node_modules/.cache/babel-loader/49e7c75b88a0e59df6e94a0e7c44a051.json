{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/pages/DashboardView/index.js\";\nimport React from \"react\";\nimport { Layout, Typography, Tabs } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { allEmployees } from \"../../mockEmployees\";\nimport EmployeeList from \"components/EmployeeList\";\nimport _ from 'lodash';\nconst {\n  Content\n} = Layout;\nconst {\n  Title\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\n\nconst DashboardView = () => {\n  const rehireInellgibleEmployees = allEmployees.rehireInellgibleEmployees;\n  const rehireUnknownEmployees = allEmployees.rehireUnknownEmployees;\n\n  const groupsRehireEligible = _.groupBy(allEmployees.rehireEligibleEmployees, 'terminated_date');\n\n  var outputRehireEligible = new Map(Object.entries(groupsRehireEligible));\n  outputRehireEligible.forEach((value, key) => {\n    console.log(`${key}: ${JSON.stringify(value)}`);\n  });\n\n  const groupsIllegible = _.groupBy(allEmployees.rehireInellgibleEmployees, 'terminated_date');\n\n  var outputIllegible = new Map(Object.entries(groupsIllegible));\n\n  const groupsUnknown = _.groupBy(allEmployees.rehireUnknownEmployees, 'terminated_date');\n\n  var outputUnknown = new Map(Object.entries(groupsUnknown));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        level: 1,\n        style: {\n          margin: '0 16px'\n        },\n        children: \"DASHBOARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"site-layout\",\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          margin: '0 16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire Eligible\",\n            children: outputRehireEligible.forEach((value, key) => {\n              value.map((item, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [console.log(`${i}: ${item.name}`), /*#__PURE__*/_jsxDEV(EmployeeList, {\n                  termDate: i,\n                  name: item.name,\n                  designation: item.position\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 23\n                }, this), console.log(`2 ${i}: ${item.name}`)]\n              }, void 0, true));\n            })\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire Ineligible\",\n            children: rehireInellgibleEmployees.map((item, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(EmployeeList, {\n                name: item.name,\n                designation: item.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this)\n            }, void 0, false))\n          }, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire unknown\",\n            children: rehireUnknownEmployees.map((item, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(EmployeeList, {\n                name: item.name,\n                designation: item.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)\n            }, void 0, false))\n          }, \"3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DashboardView;\nexport default DashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardView\");","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/pages/DashboardView/index.js"],"names":["React","Layout","Typography","Tabs","allEmployees","EmployeeList","_","Content","Title","TabPane","DashboardView","rehireInellgibleEmployees","rehireUnknownEmployees","groupsRehireEligible","groupBy","rehireEligibleEmployees","outputRehireEligible","Map","Object","entries","forEach","value","key","console","log","JSON","stringify","groupsIllegible","outputIllegible","groupsUnknown","outputUnknown","margin","map","item","i","name","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaN,MAAnB;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAYN,UAAlB;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAcN,IAApB;;AAEA,MAAMO,aAAa,GAAG,MAAM;AAC1B,QAAMC,yBAAyB,GAAGP,YAAY,CAACO,yBAA/C;AACA,QAAMC,sBAAsB,GAAGR,YAAY,CAACQ,sBAA5C;;AAEA,QAAMC,oBAAoB,GAAGP,CAAC,CAACQ,OAAF,CAAUV,YAAY,CAACW,uBAAvB,EAAgD,iBAAhD,CAA7B;;AACA,MAAIC,oBAAoB,GAAI,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeN,oBAAf,CAAR,CAA5B;AACAG,EAAAA,oBAAoB,CAACI,OAArB,CAA6B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAI,KAAIG,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAsB,EAA7C;AACD,GAFD;;AAIA,QAAMM,eAAe,GAAGrB,CAAC,CAACQ,OAAF,CAAUV,YAAY,CAACO,yBAAvB,EAAkD,iBAAlD,CAAxB;;AACA,MAAIiB,eAAe,GAAI,IAAIX,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeQ,eAAf,CAAR,CAAvB;;AAGA,QAAME,aAAa,GAAGvB,CAAC,CAACQ,OAAF,CAAUV,YAAY,CAACQ,sBAAvB,EAA+C,iBAA/C,CAAtB;;AACA,MAAIkB,aAAa,GAAI,IAAIb,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeU,aAAf,CAAR,CAArB;AAGA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAhB;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,gBAAgB,EAAC,GAAvB;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC,iBAAb;AAAA,sBAEIf,oBAAoB,CAACI,OAArB,CAA6B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC3CD,cAAAA,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACR;AAAA,2BACGX,OAAO,CAACC,GAAR,CAAa,GAAEU,CAAE,KAAID,IAAI,CAACE,IAAK,EAA/B,CADH,eAEE,QAAC,YAAD;AACI,kBAAA,QAAQ,EAAED,CADd;AAEI,kBAAA,IAAI,EAAED,IAAI,CAACE,IAFf;AAGI,kBAAA,WAAW,EAAEF,IAAI,CAACG;AAHtB;AAAA;AAAA;AAAA;AAAA,wBAFF,EAOGb,OAAO,CAACC,GAAR,CAAa,KAAIU,CAAE,KAAID,IAAI,CAACE,IAAK,EAAjC,CAPH;AAAA,8BADF;AAWD,aAZD;AAFJ,aAAmC,GAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC,mBAAb;AAAA,sBACGxB,yBAAyB,CAACqB,GAA1B,CAA8B,CAACC,IAAD,EAAOC,CAAP,kBACvB;AAAA,qCACE,QAAC,YAAD;AACI,gBAAA,IAAI,EAAED,IAAI,CAACE,IADf;AAEI,gBAAA,WAAW,EAAEF,IAAI,CAACG;AAFtB;AAAA;AAAA;AAAA;AAAA;AADF,6BADP;AADH,aAAqC,GAArC;AAAA;AAAA;AAAA;AAAA,kBAlBF,eA4BE,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC,gBAAb;AAAA,sBACCxB,sBAAsB,CAACoB,GAAvB,CAA2B,CAACC,IAAD,EAAOC,CAAP,kBAClB;AAAA,qCACE,QAAC,YAAD;AACI,gBAAA,IAAI,EAAED,IAAI,CAACE,IADf;AAEI,gBAAA,WAAW,EAAEF,IAAI,CAACG;AAFtB;AAAA;AAAA;AAAA;AAAA;AADF,6BADT;AADD,aAAkC,GAAlC;AAAA;AAAA;AAAA;AAAA,kBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAoDD,CAtED;;KAAM1B,a;AAwEN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Layout, Typography, Tabs } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { allEmployees } from \"../../mockEmployees\"\nimport EmployeeList from \"components/EmployeeList\";\nimport _ from 'lodash';\n\nconst { Content} = Layout;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nconst DashboardView = () => { \n  const rehireInellgibleEmployees = allEmployees.rehireInellgibleEmployees;\n  const rehireUnknownEmployees = allEmployees.rehireUnknownEmployees;\n\n  const groupsRehireEligible = _.groupBy(allEmployees.rehireEligibleEmployees, 'terminated_date');\n  var outputRehireEligible =  new Map(Object.entries(groupsRehireEligible));\n  outputRehireEligible.forEach((value, key) => {\n    console.log(`${key}: ${JSON.stringify(value)}`)\n  })\n\n  const groupsIllegible = _.groupBy(allEmployees.rehireInellgibleEmployees, 'terminated_date');\n  var outputIllegible =  new Map(Object.entries(groupsIllegible));\n\n\n  const groupsUnknown = _.groupBy(allEmployees.rehireUnknownEmployees, 'terminated_date');\n  var outputUnknown =  new Map(Object.entries(groupsUnknown));\n\n\n  return (\n    <>\n      <div>\n        <Title level={1} style={{ margin: '0 16px' }}>DASHBOARD</Title>\n      </div>\n      <Layout className=\"site-layout\">\n          <Content style={{ margin: '0 16px' }}>\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab=\"Rehire Eligible\" key=\"1\">              \n              {\n                outputRehireEligible.forEach((value, key) => {\n                  value.map((item, i) => \n                    <>\n                      {console.log(`${i}: ${item.name}`)}\n                      <EmployeeList\n                          termDate={i}\n                          name={item.name} \n                          designation={item.position}\n                      />\n                      {console.log(`2 ${i}: ${item.name}`)}\n                    </>\n                  )\n                })\n              }\n            </TabPane>\n            <TabPane tab=\"Rehire Ineligible\" key=\"2\">\n              {rehireInellgibleEmployees.map((item, i) => \n                      <>\n                        <EmployeeList\n                            name={item.name} \n                            designation={item.position}\n                        />\n                      </>\n              )}\n            </TabPane>\n            <TabPane tab=\"Rehire unknown\" key=\"3\">\n            {rehireUnknownEmployees.map((item, i) => \n                      <>\n                        <EmployeeList\n                            name={item.name} \n                            designation={item.position}\n                        />\n                      </>\n              )}            \n            </TabPane>\n          </Tabs>\n          </Content>\n         \n        </Layout>\n    </>\n    \n  );\n};\n\nexport default DashboardView;\n"]},"metadata":{},"sourceType":"module"}