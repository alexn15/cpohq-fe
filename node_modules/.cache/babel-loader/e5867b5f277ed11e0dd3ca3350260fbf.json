{"ast":null,"code":"/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\nimport { combineReducers } from \"redux\";\nconst ADD_MENU_ITEMS = \"ADD_MENU_ITEMS\";\nconst INCREASE_COUNTER = \"INCR_COUNTER\";\nconst DECREASE_COUNTER = \"DEC_COUNTER\";\nconst initState = {\n  todoMenu: [],\n  counterList: []\n};\n\nconst addMenuItemReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_MENU_ITEMS:\n      const tempTodo = state.todoMenu.map(list => list);\n      tempTodo.push(action.payload);\n      const tempCount = state.counterList.map(i => i);\n      tempCount.push(...tempCount, {\n        data: 0\n      });\n      return {\n        todoMenu: tempTodo\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst counterReducer = (state = initState, action) => {\n  switch (action.type) {\n    case INCREASE_COUNTER:\n      const tempIncCount = state.counterList.map(list => list); //get current index\n\n      const i = tempIncCount.findIndex(el => el.id === action.payload.id); //update array if exist else add\n\n      if (i > -1) {\n        const j = tempIncCount[i].data + action.payload.data;\n        tempIncCount[i] = { ...tempIncCount[i],\n          data: j\n        };\n      } else {\n        tempIncCount.push(action.payload);\n      }\n\n      return {\n        counterList: tempIncCount\n      };\n\n    case DECREASE_COUNTER:\n      //copy array\n      const tempDecCount = state.counterList.map(list => list); //get current index\n\n      const x = tempDecCount.findIndex(el => el.id === action.payload.id); //update array if exist else add\n\n      if (x > -1) {\n        const y = tempDecCount[x].data - action.payload.data;\n        tempDecCount[x] = { ...tempDecCount[x],\n          data: y < 0 ? 0 : y\n        };\n      } else {\n        tempDecCount.push(action.payload);\n      }\n\n      return {\n        counterList: tempDecCount\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({\n  addMenuItemReducer,\n  counterReducer\n});\nexport default reducer;","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/redux/reducer/index.js"],"names":["combineReducers","ADD_MENU_ITEMS","INCREASE_COUNTER","DECREASE_COUNTER","initState","todoMenu","counterList","addMenuItemReducer","state","action","type","tempTodo","map","list","push","payload","tempCount","i","data","counterReducer","tempIncCount","findIndex","el","id","j","tempDecCount","x","y","reducer"],"mappings":"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","sourcesContent":["/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\n\nimport { combineReducers } from \"redux\";\n\nconst ADD_MENU_ITEMS = \"ADD_MENU_ITEMS\";\nconst INCREASE_COUNTER = \"INCR_COUNTER\";\nconst DECREASE_COUNTER = \"DEC_COUNTER\";\n\n\nconst initState = {\n    todoMenu: [],\n    counterList: []\n}\n\n\nconst addMenuItemReducer = (state = initState, action) => {\n    switch (action.type){\n        case ADD_MENU_ITEMS:\n            const tempTodo = state.todoMenu.map(list => list);\n            tempTodo.push(action.payload);\n            const tempCount = state.counterList.map(i => i);\n            tempCount.push(...tempCount, {data:0})\n            return {\n                todoMenu: tempTodo,\n            };\n        default:\n            return state;\n    }\n}\n\nconst counterReducer = (state = initState, action) => {\n    switch (action.type){\n        case INCREASE_COUNTER:\n            const tempIncCount = state.counterList.map(list => list);\n            //get current index\n            const i = tempIncCount.findIndex(el => el.id === action.payload.id);\n            //update array if exist else add\n            if (i > -1) {\n                const j = tempIncCount[i].data + action.payload.data\n                tempIncCount[i] = {...tempIncCount[i], data : j} \n            }else{\n                tempIncCount.push(action.payload);\n            } \n            return {\n                counterList: tempIncCount,\n            };\n        case DECREASE_COUNTER:\n                //copy array\n                const tempDecCount = state.counterList.map(list => list);\n                //get current index\n                const x = tempDecCount.findIndex(el => el.id === action.payload.id);\n                //update array if exist else add\n                if (x > -1) {\n                    const y = tempDecCount[x].data - action.payload.data\n                    tempDecCount[x] = {...tempDecCount[x], data : y < 0? 0: y} \n                }else{\n                    tempDecCount.push(action.payload);\n                } \n                return {\n                    counterList: tempDecCount,\n                };\n        default:\n            return state;\n    }\n}\n\nconst reducer = combineReducers({\n    addMenuItemReducer,\n    counterReducer\n})\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}