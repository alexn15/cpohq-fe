{"ast":null,"code":"/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\nimport { actionTypes } from \"../action/index\";\nconst initState = {\n  todoMenu: [],\n  counterList: []\n};\n\nconst reducer = (state = initState, action) => {\n  const tempTodo = state.todoMenu.map(list => list);\n\n  switch (action.type) {\n    case actionTypes.ADD_MENU_ITEMS:\n      const tempCount = state.counterList.map(list => list); //init data for menu items\n\n      tempTodo.push(action.payload);\n      tempCount.push({\n        data: 0,\n        name: \"Counter\"\n      });\n      return {\n        todoMenu: tempTodo,\n        counterList: tempCount\n      };\n\n    case actionTypes.INCREASE_COUNTER:\n      const tempIncCount = state.counterList.map(list => list); //update array if exist\n\n      const updatedCounter = tempIncCount.map((item, index) => index === action.payload.index ? { ...tempIncCount[index],\n        data: tempIncCount[index].data + action.payload.data\n      } : item);\n      return {\n        todoMenu: tempTodo,\n        counterList: updatedCounter\n      };\n\n    case actionTypes.DECREASE_COUNTER:\n      const tempDecCount = state.counterList.map(list => list); //update array if exist\n\n      const updatedDecCounter = tempDecCount.map((item, index) => index === action.payload.index ? { ...tempDecCount[index],\n        data: tempDecCount[index].data - action.payload.data < 0 ? 0 : tempDecCount[index].data - action.payload.data\n      } : item);\n      return {\n        todoMenu: tempTodo,\n        counterList: updatedDecCounter\n      };\n\n    case actionTypes.RENAME_COUNTER:\n      const tempMyCount = state.counterList.map(list => list); //update array if exist\n\n      const updatedMyCounter = tempMyCount.map((item, index) => index === action.payload.index ? { ...tempMyCount[index],\n        name: action.payload.data\n      } : item);\n      return {\n        todoMenu: tempTodo,\n        counterList: updatedMyCounter\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/cpohq-fe/src/redux/reducer/index.js"],"names":["actionTypes","initState","todoMenu","counterList","reducer","state","action","tempTodo","map","list","type","ADD_MENU_ITEMS","tempCount","push","payload","data","name","INCREASE_COUNTER","tempIncCount","updatedCounter","item","index","DECREASE_COUNTER","tempDecCount","updatedDecCounter","RENAME_COUNTER","tempMyCount","updatedMyCounter"],"mappings":"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","sourcesContent":["/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\n\nimport { actionTypes } from \"../action/index\"\n\n\nconst initState = {\n    todoMenu: [],\n    counterList: []\n}\n\n\nconst reducer = (state = initState, action) => {\n    const tempTodo = state.todoMenu.map(list => list);\n\n    switch (action.type){\n        case actionTypes.ADD_MENU_ITEMS:\n            const tempCount = state.counterList.map(list => list);\n            //init data for menu items\n            tempTodo.push(action.payload);\n            tempCount.push({data: 0, name: \"Counter\"});\n            return {\n                todoMenu: tempTodo,\n                counterList: tempCount\n            };\n        case actionTypes.INCREASE_COUNTER:\n            const tempIncCount = state.counterList.map(list => list);\n            //update array if exist\n            const updatedCounter = tempIncCount.map((item, index) =>\n                index === action.payload.index ?  {...tempIncCount[index], data: tempIncCount[index].data + action.payload.data} : item\n            );            \n            return {\n                todoMenu: tempTodo,\n                counterList: updatedCounter,\n            };\n        case actionTypes.DECREASE_COUNTER:\n            const tempDecCount = state.counterList.map(list => list);\n            //update array if exist\n            const updatedDecCounter = tempDecCount.map((item, index) =>\n                index === action.payload.index ?  {...tempDecCount[index], data:( tempDecCount[index].data - action.payload.data < 0? 0: tempDecCount[index].data - action.payload.data)} : item\n            );\n            return {\n                todoMenu: tempTodo,\n                counterList: updatedDecCounter,\n            };\n\n        case actionTypes.RENAME_COUNTER:\n            const tempMyCount = state.counterList.map(list => list);\n            //update array if exist\n            const updatedMyCounter = tempMyCount.map((item, index) =>\n                index === action.payload.index ?  {...tempMyCount[index], name: action.payload.data} : item\n            );\n            return {\n                todoMenu: tempTodo,\n                counterList: updatedMyCounter,\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}