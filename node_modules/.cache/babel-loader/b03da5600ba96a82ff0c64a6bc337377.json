{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/components/EmployeeList.js\",\n    _s = $RefreshSig$();\n\n/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Form } from \"antd\";\nimport { UpCircleFilled, DownCircleFilled, EditOutlined } from \"@ant-design/icons\";\n\nconst EmployeeList = ({\n  type,\n  voluntary,\n  name,\n  designation\n}) => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px'\n      },\n      onClick: showModal,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        layout: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#000',\n              background: type === 'eligible' ? voluntary ? 'green' : 'red' : 'grey',\n              width: '60px',\n              height: '60px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#000'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#000'\n            },\n            children: designation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        layout: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#000',\n              background: type === 'eligible' ? voluntary ? 'green' : 'red' : 'grey',\n              width: '60px',\n              height: '60px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#000'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#000'\n            },\n            children: designation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Goto \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: [name, \"'s profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeList, \"ZFwHEtl1ZQoNaflbPbQvGOHlSaM=\");\n\n_c = EmployeeList;\nEmployeeList.propTypes = {\n  name: PropTypes.string,\n  voluntary: PropTypes.bool,\n  designation: PropTypes.string,\n  type: PropTypes.string,\n  link: PropTypes.string\n};\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/components/EmployeeList.js"],"names":["React","useState","PropTypes","Modal","Form","UpCircleFilled","DownCircleFilled","EditOutlined","EmployeeList","type","voluntary","name","designation","isModalVisible","setIsModalVisible","showModal","handleOk","handleCancel","margin","color","background","width","height","propTypes","string","bool","link"],"mappings":"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","sourcesContent":["/**\n * @author [Alex Neo]\n * @email [alex.neo0115@gmail.com]\n * @create date 2022-01-12 18:08:03\n * @modify date 2022-01-12 18:08:03\n * @desc [create reducer]\n*/\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal, Form } from \"antd\";\nimport {\n    UpCircleFilled,\n    DownCircleFilled,\n    EditOutlined\n} from \"@ant-design/icons\";\n\n\nconst EmployeeList = ({type, voluntary, name, designation}) => {\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    \n    return(\n        <>\n            <div style={{margin: '5px'}} onClick={showModal}>\n                <Form layout=\"inline\">\n                    <Form.Item name=\"content\" >\n                        <div style={{color:'#000', background: type === 'eligible'? (voluntary ? 'green': 'red')\n                            : 'grey', width: '60px', height: '60px'}}></div>\n                    </Form.Item>\n                    <Form.Item>\n                        <span style={{color:'#000'}}>{name}</span>\n                    </Form.Item>\n                    <Form.Item>\n                        <span style={{color:'#000'}}>{designation}</span>\n                    </Form.Item>\n                </Form>\n            </div>\n\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n                <Form layout=\"inline\">\n                        <Form.Item name=\"content\" >\n                            <div style={{color:'#000', background: type === 'eligible'? (voluntary ? 'green': 'red')\n                                : 'grey', width: '60px', height: '60px'}}></div>\n                        </Form.Item>\n                        <Form.Item>\n                            <span style={{color:'#000'}}>{name}</span>\n                        </Form.Item>\n                        <Form.Item>\n                            <span style={{color:'#000'}}>{designation}</span>\n                        </Form.Item>\n                </Form>\n                <br />\n                <span>Goto <a href=\"\">{name}'s profile</a></span>\n            </Modal>\n\n        </>\n    );\n};\n\nEmployeeList.propTypes = {\n\tname: PropTypes.string,\n    voluntary: PropTypes.bool,\n    designation: PropTypes.string,\n    type: PropTypes.string,\n    link: PropTypes.string\n};\n\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}