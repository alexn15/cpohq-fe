{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/pages/DashboardView/index.js\";\nimport React from \"react\";\nimport { Layout, Typography, Tabs } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { allEmployees } from \"../../mockEmployees\";\nimport EmployeeList from \"components/EmployeeList\";\nimport _ from 'lodash';\nconst {\n  Content\n} = Layout;\nconst {\n  Title\n} = Typography;\nconst {\n  TabPane\n} = Tabs;\n\nconst DashboardView = () => {\n  const groupsRehireEligible = _.groupBy(allEmployees.rehireEligibleEmployees, 'terminated_date');\n\n  var outputRehireEligible = new Map(Object.entries(groupsRehireEligible)); // outputRehireEligible.forEach((value, key) => {\n  //   console.log(`${key}: ${JSON.stringify(value)}`)\n  // })\n\n  const groupsIllegible = _.groupBy(allEmployees.rehireInellgibleEmployees, 'terminated_date');\n\n  var outputIllegible = new Map(Object.entries(groupsIllegible));\n\n  const groupsUnknown = _.groupBy(allEmployees.rehireUnknownEmployees, 'terminated_date');\n\n  var outputUnknown = new Map(Object.entries(groupsUnknown));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        level: 1,\n        style: {\n          margin: '0 16px'\n        },\n        children: \"DASHBOARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"site-layout\",\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          margin: '0 16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          defaultActiveKey: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire Eligible\",\n            children: outputIllegible.forEach((value, key) => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: value.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"hey : \", v.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }, this))\n            }, void 0, false))\n          }, \"1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire Ineligible\"\n          }, \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n            tab: \"Rehire unknown\"\n          }, \"3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DashboardView;\nexport default DashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardView\");","map":{"version":3,"sources":["/Users/aneo/Desktop/cpohq/twine-interview-frontend-an/src/pages/DashboardView/index.js"],"names":["React","Layout","Typography","Tabs","allEmployees","EmployeeList","_","Content","Title","TabPane","DashboardView","groupsRehireEligible","groupBy","rehireEligibleEmployees","outputRehireEligible","Map","Object","entries","groupsIllegible","rehireInellgibleEmployees","outputIllegible","groupsUnknown","rehireUnknownEmployees","outputUnknown","margin","forEach","value","key","map","v","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,MAAzC;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaN,MAAnB;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAYN,UAAlB;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAcN,IAApB;;AAEA,MAAMO,aAAa,GAAG,MAAM;AAE1B,QAAMC,oBAAoB,GAAGL,CAAC,CAACM,OAAF,CAAUR,YAAY,CAACS,uBAAvB,EAAgD,iBAAhD,CAA7B;;AACA,MAAIC,oBAAoB,GAAI,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeN,oBAAf,CAAR,CAA5B,CAH0B,CAI1B;AACA;AACA;;AAEA,QAAMO,eAAe,GAAGZ,CAAC,CAACM,OAAF,CAAUR,YAAY,CAACe,yBAAvB,EAAkD,iBAAlD,CAAxB;;AACA,MAAIC,eAAe,GAAI,IAAIL,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeC,eAAf,CAAR,CAAvB;;AAGA,QAAMG,aAAa,GAAGf,CAAC,CAACM,OAAF,CAAUR,YAAY,CAACkB,sBAAvB,EAA+C,iBAA/C,CAAtB;;AACA,MAAIC,aAAa,GAAI,IAAIR,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeI,aAAf,CAAR,CAArB;AAGA,sBACE;AAAA,4BACE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,KAAK,EAAE;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE;AAAV,SAAhB;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,gBAAgB,EAAC,GAAvB;AAAA,kCACA,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC,iBAAb;AAAA,sBAEMJ,eAAe,CAACK,OAAhB,CAAwB,CAACC,KAAD,EAAQC,GAAR,kBAAgB;AAAA,wBAEpCD,KAAK,CAACE,GAAN,CAAWC,CAAD,iBACR;AAAA,qCAAaA,CAAC,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAFoC,6BAAxC;AAFN,aAAmC,GAAnC;AAAA;AAAA;AAAA;AAAA,kBADA,eAaE,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC;AAAb,aAAqC,GAArC;AAAA;AAAA;AAAA;AAAA,kBAbF,eA2BE,QAAC,OAAD;AAAS,YAAA,GAAG,EAAC;AAAb,aAAkC,GAAlC;AAAA;AAAA;AAAA;AAAA,kBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAyDD,CAzED;;KAAMpB,a;AA2EN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Layout, Typography, Tabs } from \"antd\";\nimport 'antd/dist/antd.css';\nimport { allEmployees } from \"../../mockEmployees\"\nimport EmployeeList from \"components/EmployeeList\";\nimport _ from 'lodash';\n\nconst { Content} = Layout;\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\nconst DashboardView = () => { \n\n  const groupsRehireEligible = _.groupBy(allEmployees.rehireEligibleEmployees, 'terminated_date');\n  var outputRehireEligible =  new Map(Object.entries(groupsRehireEligible));\n  // outputRehireEligible.forEach((value, key) => {\n  //   console.log(`${key}: ${JSON.stringify(value)}`)\n  // })\n\n  const groupsIllegible = _.groupBy(allEmployees.rehireInellgibleEmployees, 'terminated_date');\n  var outputIllegible =  new Map(Object.entries(groupsIllegible));\n\n\n  const groupsUnknown = _.groupBy(allEmployees.rehireUnknownEmployees, 'terminated_date');\n  var outputUnknown =  new Map(Object.entries(groupsUnknown));\n\n\n  return (\n    <>\n      <div>\n        <Title level={1} style={{ margin: '0 16px' }}>DASHBOARD</Title>\n      </div>\n      <Layout className=\"site-layout\">\n          <Content style={{ margin: '0 16px' }}>\n          <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Rehire Eligible\" key=\"1\">              \n              {\n                outputIllegible.forEach((value, key) => <>\n                  {\n                    value.map((v)=>\n                      <div>hey : { v.email }</div>\n                    )\n                  }\n                </>)\n            }\n              \n            </TabPane>\n            <TabPane tab=\"Rehire Ineligible\" key=\"2\">\n            {\n                // outputIllegible.values().map((item, i) =>  \n                // <>\n                //    <EmployeeList\n                //         termDate={item.termDate}\n                //         name={item.name} \n                //         designation={item.position}\n                //     />\n                // </>\n                // )\n                 \n            }\n            </TabPane>\n            <TabPane tab=\"Rehire unknown\" key=\"3\">\n            {\n                // outputUnknown.forEach((value, key) => {\n                //   value.map((item, i) => \n                //     <>\n                //       {console.log(`${i}: ${item.name}`)}\n                //       <EmployeeList\n                //           termDate={i}\n                //           name={item.name} \n                //           designation={item.position}\n                //       />\n                //       {console.log(`2 ${i}: ${item.name}`)}\n                //     </>\n                //   )\n                // })\n              }         \n            </TabPane>\n          </Tabs>\n          </Content>\n        </Layout>\n    </>\n    \n  );\n};\n\nexport default DashboardView;\n"]},"metadata":{},"sourceType":"module"}